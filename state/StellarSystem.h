// Generated by dia2code
#ifndef STATE__STELLARSYSTEM__H
#define STATE__STELLARSYSTEM__H

#include <string>
#include <vector>

namespace state {
  class Planet;
  class Building;
}

#include "Planet.h"
#include "Building.h"

namespace state {

  /// class StellarSystem - 
  class StellarSystem {
    // Associations
    // Attributes
  protected:
    int nb_planets;
    std::string owner;
    bool IsCaptured;
    int systemID;
    std::vector<Planet> planet_list;
    std::vector<Building> building_list;
    // Operations
  public:
    StellarSystem ();
    ~StellarSystem ();
    void see_stellarsys ();
    bool colonize (Planet planet);
    bool upgradeBuilding (Building building);
    // Setters and Getters
    int getNb_planets() const;
    void setNb_planets(int nb_planets);
    const std::string& getOwner() const;
    void setOwner(const std::string& owner);
    bool getIsCaptured() const;
    void setIsCaptured(bool IsCaptured);
    int getSystemID() const;
    void setSystemID(int systemID);
    const std::vector<Planet>& getPlanet_list() const;
    void setPlanet_list(const std::vector<Planet>& planet_list);
    const std::vector<Building>& getBuilding_list() const;
    void setBuilding_list(const std::vector<Building>& building_list);
  };

};

#endif
